"""
Zone d'Aide Ã  FinalitÃ© RÃ©gionale (ZAFR) : pÃ©riode 2022 - 2027

DonnÃ©es rÃ©cupÃ©rÃ©es Ã  partir fichier .csv deu site data.gouv :
https://www.data.gouv.fr/fr/datasets/zones-daide-a-finalite-regionale-afr/

Lancement sur streamlit : 
streamlit run indexB012_AFR.py

Date : 22-01-24
"""

import pandas as pd
import streamlit as st
# Mise en forme : filtre, trie, dÃ©placement des colonnes
from st_aggrid import AgGrid
# Options complÃ©mentaires
from st_aggrid.grid_options_builder import GridOptionsBuilder

# PrÃ©sentation des donnÃ©es issues de l'API des loyers encadrÃ©s via streamlit
class FrontEnd():
    
    def __init__(self) -> None:
        
        # Instanciation des variables
        
        # RÃ©cupÃ©ration des fichiers .csv convertis en DF pandas
        city_df = pd.read_csv(
            'data/afr_2022.csv', sep=";", encoding='latin-1')
        district_df = pd.read_csv(
            'data/departement_afr.csv', encoding='unicode_escape', sep=";")
        
        # Fusion des deux fichiers ci-avant
        afr_df = city_df.merge(district_df, on='NÂ°')
        
        # Renommage de champs
        afr_df.rename(columns={
            'lib_com':'Commune', 'classement_afr':'AFR',
            'NÂ°':'NÂ° de dÃ©partement'}, inplace=True)
        
        # SÃ©lection des champs Ã  afficher
        self.afr_df = afr_df[[
            'Commune', 'NÂ° de dÃ©partement', 'DÃ©partement', 'RÃ©gion', 'AFR', ]]
        
        # Appel de la mÃ©thode ci-aprÃ¨s
        self.gui()
        
    def gui(self):
        
        # Pleine page
        st.set_page_config(
            page_title="DATA GOUV - Zones AFR", layout="wide",) 
        
        # Titre principal de la page @
        st.markdown(
            "<h3 style='text-align: center; color: yellow;'>Zone d'Aide Ã  FinalitÃ© RÃ©gionale : pÃ©riode 2022 - 2027</h3>",
            unsafe_allow_html=True,)
        
        # Configuration de la largeur des colonnes
        col1, col2, col3 = st.columns([2, 8, 2])
        
        with col2:
        
            # Zone de saisie de la commune
            city_input = st.text_input("Nom de la commune ðŸ‘‡",)
            
            # Si le nom de la commune a Ã©tÃ© saisie...
            if city_input:
                
                # RÃ©cupÃ©ration de la DF : filtre sur le nom saisi
                afr_df = self.afr_df[self.afr_df['Commune'].str.contains(
                    f'^{city_input}', case=False)].sort_values(by='Commune')
                
                # Affichage de la table en insÃ©rant la DF filtrÃ©e ci-avant
                AgGrid(afr_df)
            
                    
if __name__ == '__main__':
    
    application = FrontEnd()
